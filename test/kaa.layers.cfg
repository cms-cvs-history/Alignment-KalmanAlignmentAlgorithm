process Alignment =
{    
    # initialize  MessageLogger
    service = MessageLogger
    { 

        untracked vstring destinations = { "alignment" }
	untracked vstring statistics = { "alignment"}

	#untracked vstring categories = { "Alignment", "TrackProducer" }
	untracked vstring categories = { "Alignment", "AlignmentIORootBase" }
		
	untracked PSet cout =
	{ 
	    untracked string threshold = "DEBUG" 
	    untracked bool noLineBreaks = true 
	}

	untracked PSet alignment =
	{ 
	    untracked string threshold = "INFO" 
	    untracked PSet INFO = { untracked int32 limit = 0 }
	    untracked PSet WARNING = { untracked int32 limit = 0 }
	    untracked PSet ERROR = { untracked int32 limit = 0 }
	    untracked PSet DEBUG = { untracked int32 limit = 0 }
	    untracked PSet Alignment = { untracked int32 limit = -1 }
	    untracked PSet AlignmentIORootBase = { untracked int32 limit = -1 }
	    untracked PSet TrackProducer = { untracked int32 limit = -1 }
	    untracked bool noLineBreaks = true 
	}
    }

    # Alignment producer
    include "Alignment/CommonAlignmentProducer/data/AlignmentProducer.cff"

    replace AlignmentProducer.doMisalignmentScenario = true
    replace AlignmentProducer.MisalignmentScenario = { using NoMovementsScenario }

    #
    # Alignment setup
    #
    replace AlignmentProducer.ParameterBuilder =
    {
        PSet Selector =
	{
	    vstring alignParams =
	    {
		"PixelHalfBarrelLayers,110000",
		"BarrelLayers,110000",
		"PXECLayers,110000",
		"EndcapLayers,110000"
	    }
	}
    }

    replace AlignmentProducer.ParameterStore.UseExtendedCorrelations = false

    include "Alignment/ReferenceTrajectories/data/TrajectoryFactories.cff"
    include "Alignment/KalmanAlignmentAlgorithm/data/AlignmentUpdators.cff"
    include "Alignment/KalmanAlignmentAlgorithm/data/MetricsUpdators.cff"

    replace AlignmentProducer.algoConfig.AlgorithmConfig =
    {
	string Fitter = "KFFittingSmoother"   
	string Propagator = "AnalyticalPropagator"
	string TTRHBuilder = "WithoutRefit"
	string src = ""
	string bsSrc = ""
	untracked bool debug = true

	vstring Setups = { "FullTrackerTracking" }

	PSet FullTrackerTracking =
	{
	    PSet TrajectoryFactory = { using ReferenceTrajectoryFactory }
	    PSet AlignmentUpdator = { using SingleTrajectoryUpdatorForStrips }
	    PSet MetricsUpdator = { using DummyMetricsUpdator }

	    vint32 Tracking = { 1, 2, 3, 4, 5, 6 }
	    vint32 External = { }

	    untracked uint32 MinTrackingHits = 1
	    #untracked uint32 MinExternalHits = 0

	    untracked string PropagationDirection = "alongMomentum"
	    untracked string SortingDirection = "SortInsideOut"
	}
    }

    replace AlignmentProducer.algoConfig.ParameterConfig =
    {
        untracked int32 UpdateGraphs = 100

	untracked bool ApplyRandomStartValues = false

	vstring InitializationSelector = { "AllBarrelLayers", "AllEndcapLayers" }

	PSet AllBarrelLayers =
	{
 	    vstring AlignableSelection = { "PixelHalfBarrelLayers", "BarrelLayers" }

 	    untracked double XShiftsStartError = 1e-4
 	    untracked double YShiftsStartError = 1e-4
 	    untracked double ZShiftsStartError = 1e-4
 	    untracked double XRotationsStartError = 1e-8
 	    untracked double YRotationsStartError = 1e-8
 	    untracked double ZRotationsStartError = 1e-8
	}

	PSet AllEndcapLayers =
	{
 	    vstring AlignableSelection = { "PXECLayers", "EndcapLayers" }

 	    untracked double XShiftsStartError = 1e-4
 	    untracked double YShiftsStartError = 1e-4
 	    untracked double ZShiftsStartError = 1e-4
 	    untracked double XRotationsStartError = 1e-8
 	    untracked double YRotationsStartError = 1e-8
 	    untracked double ZRotationsStartError = 1e-8
	}
    }

    # initialize magnetic field
    include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"

    # ideal geometry and interface
    include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"
    include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
    include "Geometry/CommonDetUnit/data/bareGlobalTrackingGeometry.cfi"

    # Track refitter (adapted to alignment needs)
    include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilderWithoutRefit.cfi"
    include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"
    replace TrackRefitter.src = "generalTracks"
    replace TrackRefitter.TTRHBuilder = "WithoutRefit"
    replace TrackRefitter.TrajectoryInEvent = true

    include "TrackingTools/KalmanUpdators/data/KFUpdatorESProducer.cfi"
    include "TrackingTools/KalmanUpdators/data/Chi2MeasurementEstimatorESProducer.cfi"
    include "TrackingTools/TrackFitters/data/KFTrajectoryFitterESProducer.cfi"
    include "TrackingTools/TrackFitters/data/KFTrajectorySmootherESProducer.cfi"
    include "TrackingTools/TrackFitters/data/KFFittingSmootherESProducer.cfi"
    include "TrackingTools/MaterialEffects/data/MaterialPropagator.cfi"
    include "TrackingTools/GeomPropagators/data/AnalyticalPropagator.cfi"

    # input file
    untracked PSet maxEvents = { untracked int32 input = -1 }
    source = PoolSource
    { 
        untracked vstring fileNames =
	{
	    "rfio:/castor/cern.ch/cms/store/relval/2008/3/26/RelVal-RelValSingleMuMinusPt100-1206521567/0000/44B18336-62FB-DC11-BE26-00304885AA6A.root",
	    "rfio:/castor/cern.ch/cms/store/relval/2008/3/26/RelVal-RelValSingleMuMinusPt100-1206521567/0000/D0EA9107-54FB-DC11-926B-001617E30F50.root",
	    "rfio:/castor/cern.ch/cms/store/relval/2008/3/26/RelVal-RelValSingleMuMinusPt100-1206521567/0000/FA10A62F-54FB-DC11-A869-000423D94A04.root"
       }
 
	untracked uint32 skipEvents = 0
    }	

    path p = { TrackRefitter }
}

